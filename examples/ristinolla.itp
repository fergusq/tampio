# Lisenssi

(
Copyright [c] 2017 Iikka Hauhio. Kaikki oikeudet pidätetään.

Jokaiselle tämän ohjelmiston hallussapitäjälle myönnetään täten maksutta
oikeus käyttää tätä ohjelmistoa rajatta mukaanlukien oikeus käyttää, kopioida,
muokata, yhdistää, julkaista, levittää, alilisensoida ja/tai myydä tämän
ohjelmiston kopioita, ja myöntää samat oikeudet niille, joille tätä ohjelmitoa
on levitetty, seuraavilla ehdoilla:

Yllä oleva tekijänoikeushuomautus ja nämä ehdot on sisällytettävä kaikkiin
tämän ohjelmiston osittaisiin tai kokonaisiin kopioihin.

OHJELMISTO TARJOTAAN "SELLAISENAAN", ILMAN MINKÄÄNLAISTA ILMAISTUA TAI OLETETTUA
TAKUUTA MUKAANLUKIEN TAKUUTA JÄLLEENMYYNTIKELPOISUUDESTA TAI SOPIVUUDESTA
MIHINKÄÄN TIETTYYN TARKOITUKSEEN. OHJELMISTON TEKIJÖITÄ ÄLKÖÖN MISSÄÄN
TILANTEESSA PIDETTÄKÖ VASTUULLISINA MIHINKÄÄN OHJELMISTON AIHEUTTAMAAN
VAHINKOON. MIKSIKÖHÄN TÄMÄ TEKSTI KIRJOITETAAN ISOLLA ENGLANNINKIELISISSÄ
LISENSSEISSÄ? SE ON VAIKEAMPI LUKEA NIIN... JOKA TAPAUKSESSA OHJELMA ON PURKKAA
EIKÄ LUULTAVASTI TOIMI. KÄYTÄ OMALLA VASTUULLA.
)

# Apufunktiot

Luvun seuraaja on se lisättynä yhteen.

Kun toistetaan n kertaa tehokas toiminto,
	jos n on suurempi kuin nolla, niin
		tehokas toiminto suoritetaan
	ja	toistetaan m kertaa tehokas toiminto, missä m on n vähennettynä yhdellä.

# Lista

Listalla on alkiot.
Listan koko on sen alkioiden määrä.

Olkoon tyhjä lista uusi lista.

# Matriisi ja vektori

Matriisilla on rivit.
Vektorilla on ruudut.

Matriisin koko on
	riippuen siitä, onko sen rivien määrä nolla,
	joko nolla
	tai sen rivien määrä kerrottuna sen ylärivin ruutujen määrällä.

Matriisin ylärivi on sen ensimmäinen rivi.
Matriisin alarivi on sen n:s rivi, missä n on sen rivien määrä.

Matriisin etusarake (ensimmäinen sarake) on
	riippuen siitä, onko sen rivien määrä nolla,
	joko uusi vektori
	tai uusi vektori, jonka ruudut ovat sen ylärivin ensimmäinen ruutu liitettynä sen alamatriisin etusarakkeen ruutuihin.

Matriisin ylämatriisi (matriisi, josta on poistettu viimeinen rivi) on
	uusi matriisi, jonka rivit ovat sen rivit n:nteen päättyen eikä muuta,
	missä n on sen rivien määrä vähennettynä yhdellä.

Matriisin alamatriisi (matriisi, josta on poistettu ylin rivi) on
	uusi matriisi, jonka rivit ovat sen rivit toisesta alkaen.

Kivan matriisin takamatriisi (matriisi, josta on poistettu ensimmäinen sarake) on
	riippuen siitä, onko sen rivien määrä nolla,
	joko uusi matriisi
	tai uusi matriisi, jonka rivit ovat
		uusi vektori, jonka ruudut ovat kivan matriisin ylärivin ruudut toisesta alkaen eikä muuta,
		liitettynä kivan matriisin alamatriisin takamatriisin riveihin.

Matriisin sarakkeet ovat
	riippuen siitä, onko sen koko nolla,
	joko tyhjän listan alkiot
	tai sen etusarake liitettynä sen takamatriisin sarakkeisiin.

Matriisin laskudiagonaali (diagonaali yläetukulmasta alatakakulmaan) on
	riippuen siitä, onko sen koko nolla,
	joko uusi vektori
	tai uusi vektori, jonka ruudut ovat sen ylärivin ensimmäinen ruutu liitettynä sen alamatriisin takamatriisin laskudiagonaalin ruutuihin.

Matriisin kasvudiagonaali (diagonaali alaetukulmasta ylätakakulmaan) on
	riippuen siitä, onko sen koko nolla,
	joko uusi vektori
	tai uusi vektori, jonka ruudut ovat sen alarivin ensimmäinen ruutu liitettynä sen ylämatriisin takamatriisin kasvudiagonaalin ruutuihin.

Vektorin häntä (vektori ilman ensimmäistä alkiota) on uusi vektori, jonka ruudut ovat sen ruudut toisesta alkaen.

Vektorin muutosmäärä (niiden alkioiden lukumäärä, jotka ovat erisuuria kuin edeltävä alkio) on
	riippuen siitä, onko sen ruutujen määrä pienempi kuin kaksi,
	joko nolla
	tai sen hännän muutosmäärä
		lisättynä riippuen siitä, onko sen ensimmäisen ruudun omistaja sen toisen ruudun omistaja,
		joko nollaan
		tai yhteen.

# HTML:n muodostus

Olkoon viestivä alue uusi muuttuja.

Olkoon loistava laskuri uusi luku.
Olkoon koodaava merkkijono tyhjyys "".

Kun lisätään koodiin mainio merkkijono,
	koodaavaksi merkkijonoksi asetetaan koodaava merkkijono yhdistettynä mainioon merkkijonoon.

Kun kasvatetaan laskuria,
	loistavaksi laskuriksi asetetaan loistavan laskurin seuraaja.

Kun muodostetaan ruudukko kivalle alueelle annetussa koossa,
	loistavaksi laskuriksi asetetaan nolla,
	lisätään koodiin teksti "<h1>Risti ja ruutu</h1>",
	lisätään koodiin teksti "<p>Kumpikin pelaaja painaa vuorotelleen valitsemaansa ruutua. Risti aloittaa.</p>",
	lisätään koodiin teksti "<div id='viesti'></div>",
	lisätään koodiin teksti "<table style='border-collapse:collapse;font-family:sans-serif;cursor:crosshair;'>",
	toistetaan annettu koko kertaa se, että
		pienen pelikentän riviksi lisätään pieni rivi, missä pieni rivi on uusi vektori eikä muuta,
		lisätään koodiin teksti "<tr>",
		toistetaan annettu koko kertaa se, että
			pienen rivin ruuduksi lisätään kiva ruutu, missä kiva ruutu on uusi ruutu, jonka omistaja on tyhjä pelaaja eikä muuta, eikä muuta,
			lyhyen ruutulistan alkioksi lisätään kiva ruutu,
			kasvatetaan laskuria
		ja	lisätään koodiin
				teksti "<td id='cell"
				yhdistettynä loistavaan laskuriin
				ja yhdistettynä tekstiin "' style='text-align:center;width:50px;height:50px;border:1px solid black;'>-</td>",
	ja	lisätään koodiin teksti "</tr>",
	lisätään koodiin teksti "</table>",
	kiva alue pyyhitään
ja	kivalle alueelle kirjoitetaan koodaava merkkijono.

# Pelilogiikka

Kun nykyisellä sivulla rekisteröidään tapahtumakäsittelijät,
	nykyinen sivu etsii elementin nimellä "viesti" tuloksenaan kiva alue,
	viestiväksi alueeksi asetetaan kiva alue,
	loistavaksi laskuriksi asetetaan nolla
ja	toistetaan pienen pelikentän koko kertaa se, että
		kasvatetaan laskuria,
		nykyinen sivu etsii elementin nimellä "cell" yhdistettynä n:ään tuloksenaan etsitty ruutualue, missä n on loistava laskuri eikä muuta,
	ja	etsittyä ruutualuetta painettaessa käyköön niin, että,
			jos nykyinen pelaaja ei ole tyhjä pelaaja, niin
				etsitty ruutualue pyyhitään,
				etsitylle ruutualueelle kirjoitetaan nykyisen pelaajan tunnus,
				lyhyen ruutulistan n:nnen alkion omistajaksi asetetaan nykyinen pelaaja,
				tarkistetaan voitto
			ja	vaihdetaan vuoroa.

Kun tarkistetaan voitto,
	tarkistetaan voitto pienen pelikentän jokaisella rivillä,
	tarkistetaan voitto pienen pelikentän jokaisella sarakkeella,
	tarkistetaan voitto pienen pelikentän kasvudiagonaalilla
ja	tarkistetaan voitto pienen pelikentän laskudiagonaalilla.

Kun tarkistetaan voitto kivalla rivillä,
	jos kivan rivin ensimmäisen ruudun omistaja ei ole tyhjä pelaaja
	ja kivan rivin muutosmäärä on nolla,
		rekisteröidään voitto.

Kun rekisteröidään voitto,
	viestivä alue pyyhitään,
	viestivälle alueelle kirjoitetaan nykyisen pelaajan nimi yhdistettynä tekstiin " voitti!"
ja	nykyiseksi pelaajaksi asetetaan tyhjä pelaaja.

# Ruudut ja pelaajaoliot

Ruudulla on omistaja.
Pelaajalla on nimi ja tunnus.

Olkoon pieni pelikenttä uusi matriisi.
Olkoon lyhyt ruutulista uusi lista.

Olkoon tyhjä pelaaja uusi pelaaja, jonka tunnus on merkki "-".
Olkoon raivoisa risti uusi pelaaja, jonka nimi on sana "risti" ja tunnus on merkki "X".
Olkoon ryhdikäs ruutu uusi pelaaja, jonka nimi on sana "ruutu" ja tunnus on merkki "O".
Olkoon nykyinen pelaaja ryhdikäs ruutu.

Kun vaihdetaan vuoroa,
	jos nykyinen pelaaja ei ole tyhjä pelaaja, niin
		nykyiseksi pelaajaksi asetetaan riippuen siitä, onko nykyinen pelaaja raivoisa risti,
			joko ryhdikäs ruutu
			tai raivoisa risti,
		viestivä alue pyyhitään
	ja	viestivälle alueelle kirjoitetaan teksti "<em>Vuorossa:</em> " yhdistettynä nykyisen pelaajan nimeen.

# Päämetodi

Olkoon mukava muuttuja uusi muuttuja.

Kun nykyinen sivu avautuu,
	alustetaan pelilauta nykyisellä sivulla.

Kun alustetaan pelilauta nykyisellä sivulla,
	mukavaan muuttujaan luetaan luku kysymyksellä "Pelilaudan sivun pituus ruutuina?",
	nykyinen sivu etsii elementin nimellä "output" tuloksenaan oikeanpuoleinen alue,
	muodostetaan ruudukko oikeanpuoleiselle alueelle annetussa koossa, missä annettu koko on mukavan muuttujan arvo eikä muuta,
	nykyisellä sivulla rekisteröidään tapahtumakäsittelijät
ja	vaihdetaan vuoroa.
